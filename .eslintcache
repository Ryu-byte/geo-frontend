[{"D:\\Projects\\geo-frontend\\src\\index.js":"1","D:\\Projects\\geo-frontend\\src\\reportWebVitals.js":"2","D:\\Projects\\geo-frontend\\src\\App.js":"3","D:\\Projects\\geo-frontend\\src\\components\\Header.js":"4","D:\\Projects\\geo-frontend\\src\\components\\Design.js":"5","D:\\Projects\\geo-frontend\\src\\components\\Services.js":"6","D:\\Projects\\geo-frontend\\src\\components\\ServicesContent.js":"7","D:\\Projects\\geo-frontend\\src\\components\\Modal.js":"8","D:\\Projects\\geo-frontend\\src\\components\\Projects.js":"9","D:\\Projects\\geo-frontend\\src\\components\\ProjectsContent.js":"10","D:\\Projects\\geo-frontend\\src\\components\\Recommendation.js":"11","D:\\Projects\\geo-frontend\\src\\components\\RecommendationCard.js":"12","D:\\Projects\\geo-frontend\\src\\components\\Footer.js":"13"},{"size":517,"mtime":1608796359671,"results":"14","hashOfConfig":"15"},{"size":375,"mtime":1608796359672,"results":"16","hashOfConfig":"15"},{"size":820,"mtime":1609009359148,"results":"17","hashOfConfig":"15"},{"size":966,"mtime":1608806739681,"results":"18","hashOfConfig":"15"},{"size":3288,"mtime":1609104391385,"results":"19","hashOfConfig":"15"},{"size":4310,"mtime":1608993121280,"results":"20","hashOfConfig":"15"},{"size":769,"mtime":1608928506266,"results":"21","hashOfConfig":"15"},{"size":1569,"mtime":1608928631034,"results":"22","hashOfConfig":"15"},{"size":4394,"mtime":1608993189599,"results":"23","hashOfConfig":"15"},{"size":1921,"mtime":1608988441455,"results":"24","hashOfConfig":"15"},{"size":3673,"mtime":1609105630653,"results":"25","hashOfConfig":"15"},{"size":718,"mtime":1609004731849,"results":"26","hashOfConfig":"15"},{"size":2395,"mtime":1609101379273,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1prqdvf",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Projects\\geo-frontend\\src\\index.js",[],["59","60"],"D:\\Projects\\geo-frontend\\src\\reportWebVitals.js",[],"D:\\Projects\\geo-frontend\\src\\App.js",[],"D:\\Projects\\geo-frontend\\src\\components\\Header.js",[],"D:\\Projects\\geo-frontend\\src\\components\\Design.js",[],"D:\\Projects\\geo-frontend\\src\\components\\Services.js",[],"D:\\Projects\\geo-frontend\\src\\components\\ServicesContent.js",["61"],"import React from \"react\";\r\n\r\nexport const ServicesContent = (props) => {\r\n    const listItems = props.text.map((item, index) => <li key={index}>{item}</li>)\r\n    return (\r\n        <div className={'service__content'}>\r\n            <div className={'service__content_left-side'}>\r\n                <img src={props.img}/>\r\n            </div>\r\n            <div className={'service__content_right-side'}>\r\n                <ul className={'service__content_right-side_list'}>\r\n                    {listItems}\r\n                </ul>\r\n                <button className={'service__content_right-side_list_button'} onClick={() => props.switchModal(true)}>\r\n                    Узнать подробнее\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","D:\\Projects\\geo-frontend\\src\\components\\Modal.js",["62"],"import React from 'react';\r\nimport '../css/Modal.css';\r\nimport InputMask from 'react-input-mask';\r\n\r\nexport const Modal = ({active, setActive}) => {\r\n    document.querySelector('body').style.overflow = active ? 'hidden' : '';\r\n    return (\r\n        <div className={active ? \"modal active\" : \"modal\"} onClick={() => setActive(false)}>\r\n            <div className={\"modal__content\"} onClick={e => e.stopPropagation()}>\r\n                <span>ФОРМА ОБРАТНОЙ СВЯЗИ</span>\r\n                <svg onClick={() => setActive(false)} width=\"21\" height=\"20\" viewBox=\"0 0 21 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path d=\"M1.5 1.5L18.5 18.5M19 1.5L2 18.5\" stroke=\"black\" strokeWidth=\"3\" strokeLinecap=\"round\"/>\r\n                </svg>\r\n                <div className={\"modal__content_input\"}>\r\n                    <input type=\"text\" placeholder={\"Имя\"}/>\r\n                    <InputMask mask=\"+7 999 999 99 99\" maskChar=\" \" placeholder={\"Телефон\"} />\r\n                    <label htmlFor=\"modal__content_input_personal\">\r\n                        <input type=\"checkbox\" id=\"modal__content_input_personal\"/>\r\n                        <span>Я согласен на обработку&nbsp;<a href=\"#\">моих персональных данных</a></span>\r\n                    </label>\r\n                </div>\r\n                <button type=\"submit\" className={'modal__content_input_button'}>\r\n                    Перезвоните мне\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n","D:\\Projects\\geo-frontend\\src\\components\\Projects.js",[],"D:\\Projects\\geo-frontend\\src\\components\\ProjectsContent.js",["63"],"import React from \"react\";\r\nimport 'swiper/components/navigation/navigation.scss';\r\nimport 'swiper/components/pagination/pagination.scss';\r\nimport 'swiper/components/scrollbar/scrollbar.scss';\r\nimport 'swiper/swiper.scss';\r\nimport \"../css/Swiper.css\";\r\nimport SwiperCore, {Navigation, Pagination} from 'swiper';\r\nimport {Swiper, SwiperSlide} from 'swiper/react';\r\nimport leftArrow from '../images/leftArrow.svg';\r\nimport rightArrow from '../images/rightArrow.svg';\r\n\r\nSwiperCore.use([Navigation, Pagination]);\r\n\r\nexport const ProjectsContent = (props) => {\r\n    const listItems = props.text.map((item, index) => <li key={index}>{item}</li>)\r\n    const imgList = props.img.map((item, index) => <SwiperSlide key={index}><img src={item}/></SwiperSlide> )\r\n    return (\r\n        <div className={'project__content'}>\r\n            <div className={'project__content_left-side'}>\r\n                <ul className={'project__content_left-side_list'}>\r\n                    {listItems}\r\n                </ul>\r\n                <button className={'project__content_left-side_list_button'} onClick={() => props.switchModal(true)}>\r\n                    Узнать подробнее\r\n                </button>\r\n            </div>\r\n            <div className={'project__content_right-side'}>\r\n                <Swiper\r\n                    spaceBetween={50}\r\n                    slidesPerView={1}\r\n                    navigation={{\r\n                        prevEl: '#project__prevButton',\r\n                        nextEl: '#project__nextButton',\r\n                    }}\r\n                    loop={true}\r\n                >\r\n                    {imgList}\r\n                    <button id={'project__prevButton'}><img src={leftArrow} alt={'leftArrow'}/></button>\r\n                    <button id={'project__nextButton'}><img src={rightArrow} alt={'rightArrow'}/></button>\r\n                </Swiper>\r\n            </div>\r\n        </div>\r\n    )\r\n}","D:\\Projects\\geo-frontend\\src\\components\\Recommendation.js",[],"D:\\Projects\\geo-frontend\\src\\components\\RecommendationCard.js",["64","65"],"import React from \"react\";\r\nimport '../css/RecommendationCard.css';\r\nimport pdfIcon from '../images/PDFicon.svg';\r\n\r\nexport const RecommendationCard = (props) => {\r\n    \r\n    return (\r\n        <div className={\"recommendation__card_content\"}>\r\n            <img src={pdfIcon}/>\r\n            <div className={\"recommendation__card_title\"}>\r\n                {props.title}\r\n            </div>\r\n            <div className={\"recommendation__card_text\"}>\r\n                {props.text}\r\n            </div>\r\n            <a href={'#'}>\r\n                <button className={\"recommendation__card_button\"}>\r\n                    Открыть для просмотра\r\n                </button>\r\n            </a>\r\n        </div>\r\n    )\r\n}","D:\\Projects\\geo-frontend\\src\\components\\Footer.js",["66","67"],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":8,"column":17,"nodeType":"74","endLine":8,"endColumn":39},{"ruleId":"75","severity":1,"message":"76","line":19,"column":60,"nodeType":"74","endLine":19,"endColumn":72},{"ruleId":"72","severity":1,"message":"73","line":16,"column":77,"nodeType":"74","endLine":16,"endColumn":94},{"ruleId":"72","severity":1,"message":"73","line":8,"column":13,"nodeType":"74","endLine":8,"endColumn":33},{"ruleId":"75","severity":1,"message":"76","line":15,"column":13,"nodeType":"74","endLine":15,"endColumn":27},{"ruleId":"75","severity":1,"message":"76","line":31,"column":68,"nodeType":"74","endLine":31,"endColumn":80},{"ruleId":"72","severity":1,"message":"73","line":45,"column":35,"nodeType":"74","endLine":45,"endColumn":58},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]